image:
  name: python:3.8

deploy: &deploy
  - step:
      script:
        - >
          if [ $BITBUCKET_BRANCH == "develop" ];
          then
            export POSTGRESQL_USERNAME=$DEV_POSTGRESQL_USERNAME
            export POSTGRESQL_PASSWORD=$DEV_POSTGRESQL_PASSWORD
            export POSTGRESQL_HOST=$DEV_POSTGRESQL_HOST
            export POSTGRESQL_PORT=$DEV_POSTGRESQL_PORT
            export POSTGRESQL_DB_NAME=$DEV_POSTGRESQL_DB_NAME
            export AUTH0_DOMAIN=$DEV_AUTH0_DOMAIN
            export AUTH0_CLIENT_ID=$DEV_AUTH0_CLIENT_ID
            export AUTH0_CLIENT_SECRET=$DEV_AUTH0_CLIENT_SECRET
            export S3_BUCKET="dev-3beep-user-service"
            export STACK_NAME="Dev3beepUserService"
            export ENVIRONMENT_NAME="Dev"
            export DATABASES_LAYER_NAME="DevDatabases"
            export UTILS_LAYER_NAME="DevUtils"
            export REQUESTS_LAYER_NAME="DevRequests"
          fi
        - >
          if [ $BITBUCKET_BRANCH == "master" ];
          then
            export POSTGRESQL_USERNAME=$PROD_POSTGRESQL_USERNAME
            export POSTGRESQL_PASSWORD=$PROD_POSTGRESQL_PASSWORD
            export POSTGRESQL_HOST=$PROD_POSTGRESQL_HOST
            export POSTGRESQL_PORT=$PROD_POSTGRESQL_PORT
            export POSTGRESQL_DB_NAME=$PROD_POSTGRESQL_DB_NAME
            export AUTH0_DOMAIN=$PROD_AUTH0_DOMAIN
            export AUTH0_CLIENT_ID=$PROD_AUTH0_CLIENT_ID
            export AUTH0_CLIENT_SECRET=$PROD_AUTH0_CLIENT_SECRET
            export S3_BUCKET="prod-3beep-user-service"
            export STACK_NAME="Prod3beepUserService"
            export ENVIRONMENT_NAME="Prod"
            export DATABASES_LAYER_NAME="ProdDatabases"
            export UTILS_LAYER_NAME="ProdUtils"
            export REQUESTS_LAYER_NAME="ProdRequests"
          fi
        - apt-get update && apt-get install -y python3-pip
        - pip3 install -U awscli
        - aws configure set default.region $AWS_DEFAULT_REGION
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws s3 rm --recursive s3://$S3_BUCKET
        - export DATABASES_LAYER_ARN=$(aws lambda list-layer-versions --layer-name $DATABASES_LAYER_NAME --query 'max_by(LayerVersions, &Version).LayerVersionArn'  --output text)
        - export UTILS_LAYER_ARN=$(aws lambda list-layer-versions --layer-name $UTILS_LAYER_NAME --query 'max_by(LayerVersions, &Version).LayerVersionArn'  --output text)
        - export REQUESTS_LAYER_ARN=$(aws lambda list-layer-versions --layer-name $REQUESTS_LAYER_NAME --query 'max_by(LayerVersions, &Version).LayerVersionArn'  --output text)
        - pipe: atlassian/aws-sam-deploy:0.5.2
          variables:
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
            S3_BUCKET: $S3_BUCKET
            STACK_NAME: $STACK_NAME
            CAPABILITIES: ['CAPABILITY_IAM', 'CAPABILITY_NAMED_IAM', 'CAPABILITY_AUTO_EXPAND']
            SAM_TEMPLATE: 'template.yaml'
            STACK_PARAMETERS: >
              [
                {
                  "ParameterKey": "PostgreSQLUsername",
                  "ParameterValue": ${POSTGRESQL_USERNAME}
                },
                {
                  "ParameterKey": "PostgreSQLPassword",
                  "ParameterValue": ${POSTGRESQL_PASSWORD}
                },
                {
                  "ParameterKey": "PostgreSQLHost",
                  "ParameterValue": ${POSTGRESQL_HOST}
                },
                {
                  "ParameterKey": "PostgreSQLPort",
                  "ParameterValue": "5432"
                },
                {
                  "ParameterKey": "PostgreSQLDBName",
                  "ParameterValue": ${POSTGRESQL_DB_NAME}
                },
                {
                  "ParameterKey": "Auth0Domain",
                  "ParameterValue": ${AUTH0_DOMAIN}
                },
                {
                  "ParameterKey": "Auth0ClientId",
                  "ParameterValue": ${AUTH0_CLIENT_ID}
                },
                {
                  "ParameterKey": "Auth0ClientSecret",
                  "ParameterValue": ${AUTH0_CLIENT_SECRET}
                },
                {
                  "ParameterKey": "EnvironmentName",
                  "ParameterValue": ${ENVIRONMENT_NAME}
                },
                {
                  "ParameterKey": "DatabasesLayerARN",
                  "ParameterValue": ${DATABASES_LAYER_ARN}
                },
                {
                  "ParameterKey": "UtilsLayerARN",
                  "ParameterValue": ${UTILS_LAYER_ARN}
                },
                {
                  "ParameterKey": "RequestsLayerARN",
                  "ParameterValue": ${REQUESTS_LAYER_ARN}
                }
              ]
            WAIT: 'true'
            WAIT_INTERVAL: 60
            DEBUG: 'true'

pipelines:
  branches:
    develop:
      - <<: *deploy
    master:
      - <<: *deploy